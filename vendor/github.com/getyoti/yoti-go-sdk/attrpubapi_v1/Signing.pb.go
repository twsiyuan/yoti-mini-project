// Code generated by protoc-gen-go.
// source: Signing.proto
// DO NOT EDIT!

package attrpubapi_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AttributeSigning struct {
	Name              string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value             []byte      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ContentType       ContentType `protobuf:"varint,3,opt,name=content_type,json=contentType,enum=attrpubapi_v1.ContentType" json:"content_type,omitempty"`
	ArtifactSignature []byte      `protobuf:"bytes,4,opt,name=artifact_signature,json=artifactSignature,proto3" json:"artifact_signature,omitempty"`
	SubType           string      `protobuf:"bytes,5,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	SignedTimeStamp   []byte      `protobuf:"bytes,6,opt,name=signed_time_stamp,json=signedTimeStamp,proto3" json:"signed_time_stamp,omitempty"`
}

func (m *AttributeSigning) Reset()                    { *m = AttributeSigning{} }
func (m *AttributeSigning) String() string            { return proto.CompactTextString(m) }
func (*AttributeSigning) ProtoMessage()               {}
func (*AttributeSigning) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func init() {
	proto.RegisterType((*AttributeSigning)(nil), "attrpubapi_v1.AttributeSigning")
}

func init() { proto.RegisterFile("Signing.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0xc9, 0xf7, 0xb5, 0xd5, 0xc6, 0xd6, 0xda, 0x20, 0x12, 0xbb, 0x1a, 0x74, 0x33, 0x08,
	0x0e, 0xa8, 0x6b, 0x17, 0xd6, 0x17, 0x90, 0x99, 0xee, 0x43, 0x32, 0x5e, 0x87, 0x80, 0xf9, 0x43,
	0xe6, 0xa6, 0x30, 0x8f, 0xed, 0x1b, 0xc8, 0x24, 0x56, 0xe9, 0x2e, 0xf7, 0xfe, 0x72, 0xcf, 0x39,
	0x1c, 0xba, 0x6c, 0x74, 0x67, 0xb5, 0xed, 0x2a, 0x1f, 0x1c, 0x3a, 0xb6, 0x94, 0x88, 0xc1, 0x47,
	0x25, 0xbd, 0x16, 0xfb, 0x87, 0xcd, 0xea, 0x05, 0x31, 0x68, 0x15, 0x11, 0x32, 0xbf, 0xf9, 0x22,
	0xf4, 0xe2, 0x77, 0xf7, 0x73, 0xca, 0x18, 0x9d, 0x58, 0x69, 0x80, 0x93, 0x82, 0x94, 0xf3, 0x3a,
	0xbd, 0xd9, 0x25, 0x9d, 0xee, 0xe5, 0x67, 0x04, 0xfe, 0xaf, 0x20, 0xe5, 0xa2, 0xce, 0x03, 0x7b,
	0xa6, 0x8b, 0xd6, 0x59, 0x04, 0x8b, 0x02, 0x07, 0x0f, 0xfc, 0x7f, 0x41, 0xca, 0xf3, 0xc7, 0x4d,
	0x75, 0xe4, 0x5a, 0xbd, 0xe6, 0x2f, 0xbb, 0xc1, 0x43, 0x7d, 0xd6, 0xfe, 0x0d, 0xec, 0x9e, 0x32,
	0x19, 0x50, 0x7f, 0xc8, 0x16, 0x45, 0xaf, 0x3b, 0x2b, 0x31, 0x06, 0xe0, 0x93, 0xe4, 0xb0, 0x3e,
	0x90, 0xe6, 0x00, 0xd8, 0x35, 0x3d, 0xed, 0xa3, 0xca, 0x4e, 0xd3, 0x94, 0xed, 0xa4, 0x8f, 0x2a,
	0x29, 0xdd, 0xd1, 0xf5, 0x28, 0x00, 0xef, 0x02, 0xb5, 0x01, 0xd1, 0xa3, 0x34, 0x9e, 0xcf, 0x92,
	0xd0, 0x2a, 0x83, 0x9d, 0x36, 0xd0, 0x8c, 0xeb, 0xed, 0x2d, 0xbd, 0x6a, 0x9d, 0xa9, 0x06, 0x87,
	0xfa, 0x38, 0xe8, 0x76, 0x3e, 0x56, 0xf1, 0x36, 0x16, 0xa3, 0x66, 0xa9, 0x9f, 0xa7, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x85, 0x4d, 0xba, 0x2e, 0x50, 0x01, 0x00, 0x00,
}
